Patients are identified by an SSN, and their names, addresses, and ages must be recorded.
Doctors are identified by an SSN. For each doctor, the name, specialty, and years of
experience must be recorded. Each pharmaceutical company is identified by name; it has an
address and one phone number. For each drug, the trade name and formula must be recorded.
Each drug is sold by a given pharmaceutical company, and the trade name identifies a drug
uniquely from among the products of that company. Each pharmacy has a name, address, and
phone number. Each patient is checked up by some doctor. Every doctor has at least one
patient. Each pharmacy sells several drugs and has a price for each. A drug could be sold at
several pharmacies, and the price could vary from one pharmacy to another. Doctors
prescribe drugs for patients. A doctor could prescribe one or more drugs for several patients,
and a patient could obtain prescriptions from several doctors. Each prescription has a date
and a quantity associated with it. 
Pharmaceutical companies have long-term contracts with
pharmacies. A pharmaceutical company can contract with several pharmacies, and a
pharmacy can contract with several pharmaceutical companies. For each contract, you have
to store a start date, an end date, supervisor and the text of the contract.

PATIENTS{
SSN
NAME
CITY
AGES
DOCTOR:[]
PRESCRIBE:[]
}

db.patient.insertOne({ssn:312,name:'Jagan',city:'Bangalore',age:24,doctor:['D101'],prescribe:['P1']})
db.patient.insertOne({ssn:123,name:'Vikas',city:'Mysore',age:19,doctor:['D102','D101'],prescribe:['P2','P4']})
db.patient.insertOne({ssn:231,name:'Mansoor',city:'Mysore',age:20,doctor:['D103'],prescribe:['P3']})


DOCTOR{
SSN
NAME
SPECIALITY
YOE
}

db.doctor.insertOne({ssn:'D101',name:'Suresh',expert:'eye',yoe:12})
db.doctor.insertOne({ssn:'D102',name:'Ramesh',expert:'heart',yoe:21})
db.doctor.insertOne({ssn:'D103',name:'Ganesh',expert:'eye',yoe:23})


PRECIBE{
PID:
DOCTOR:
DRUGS:[]
DATE
QUANTITY
}

db.prescibe.insertOne({pid:'P1',patient:312,doctor:'D101',drug:['aspirin','dolo'],date:new Date('2013-10-23'),Quantity:1})
db.prescibe.insertOne({pid:'P2',patient:123,doctor:'D102',drug:['aspirin','crocin'],date:new Date('2013-1-3'),Quantity:4})
db.prescibe.insertOne({pid:'P3',patient:231,doctor:'D103',drug:['morphine','dolo'],date:new Date('2012-11-12'),Quantity:2})
db.prescibe.insertOne({pid:'P4',patient:123,doctor:'D101',drug:['aspirin','paracetomol'],date:new Date('2013-6-5'),Quantity:1})


PCOM{
NAME
CITY
PHONE
DRUG:[]
}

db.pcom.insertOne({name:'biogen',city:'bangalore',phone:423521,drug:['aspirin','morphine']})
db.pcom.insertOne({name:'elilily',city:'bangalore',phone:324324,drug:['dolo']})
db.pcom.insertOne({name:'novopharm',city:'mysore',phone:3424234,drug:['crocin']})

DRUG{
TRADENAME
FORMULA
}


db.drug.insertOne({name:'aspirin',formula:'sd7d8'})
db.drug.insertOne({name:'paracetomol',formula:'dsd8sd9'})
db.drug.insertOne({name:'morphine',formula:'sd9sd9s'})
db.drug.insertOne({name:'dolo',formula:'sd0sds9'})
db.drug.insertOne({name:'crocin',formula:'sd9ds9'})


PHARMA{
NAME
CITY
PHONE
DRUG:[DRUG,PRICE]
CONTRACT:[]
}

db.pharm.insertOne({name:'corner shop',city:'bangalore',phone:4324324,drug:[{name:'aspirin',price:'10'},{name:'dolo',price:5},{name:'morphine',price:'8'}],contract:['C1','C2']})
db.pharm.insertOne({name:'highland shop',city:'bangalore',phone:3424234,drug:[{name:'aspirin',price:'8'},{name:'morphine',price:'10'},{name:'crocin',price:3}],contract:['C3','C4']})


CONTRACT{
PHARCOM
STARTDATE
ENDDATE
SUPERVISOR
TEXT
}

db.contract.insertOne({id:'C1',pcomname:'biogen',stdate:'2001-12-3',endate:'2031-12-3',sup:'Sup1',text:'hbdvjasbdhgcsagdbjhsdvasvdas'})
db.contract.insertOne({id:'C2',pcomname:'novopharm',stdate:'2001-12-3',endate:'2031-12-3',sup:'Sup3',text:'dsadjhasvhdhsadvgsahdvhsad'})
db.contract.insertOne({id:'C3',pcomname:'elilily',stdate:'2001-12-3',endate:'2031-12-3',sup:'Sup2',text:'dsahjdhsabvhdashdbhjsak'})
db.contract.insertOne({id:'C4',pcomname:'biogen',stdate:'2001-12-3',endate:'2031-12-3',sup:'Sup1',text:'dhjsdhsabdhvsauydjhsav'})


ASSISTANT{
SSN
NAME
CITY
YOE
WARDS[]
}

  db.assistant.insertMany([
  {
    ssn: 'AS001',
    name: 'Priyanka',
    address: 'Sirsi',
    yoe:"10",
    wards:["general","icu","op-theatre"]
  },
  {
    ssn: 'AS002',
    name: 'Shashant',
    address: 'Agra',
    yoe:"10",
    wards:["icu","op-theatre"]
  },
  {
    ssn: 'AS003',
    name: 'Prajna',
    address: 'mysuru',
   yoe:"2",
   wards:["general"]
  },
  {
    ssn: 'AS004',
    name: 'Preetam',
    address: 'Sagar',
    yoe:"12",
    wards:["icu"]
  },
  {
    ssn: 'AS005',
    name: 'Manoj',
    address: 'Hubballi',
   yoe:"5",
   wards:["general","icu"]
  },
  {
    ssn: 'AS006',
    name: 'Ashwin',
    address: 'Chennai',
    yoe:"7",
  wards:[]
  }])
 




















i) List the details of patients who are 20 years old and have been checked by eye-specialist. 
db.patient.aggregate([
  {$match: {age: 20}},
  {$lookup: {
      from: "doctor",
      localField: "doctor",
      foreignField: "ssn",
      as: "doctorDetails"
    }},
  {$unwind: "$doctorDetails"},
  {$match: {"doctorDetails.expert": "eye"}},
  {$project: {
      _id: 0,
      ssn: 1,
      name: 1,
      city: 1,
      age: 1,
      doctor: "$doctorDetails.name"
    }}
])


ii.List the details of doctors who have given the prescription to more than 2 patients in year 2013.
db.prescibe.aggregate([
  {$match: {date: {$gte: new Date("2013-01-01"),$lt: new Date("2014-01-01")}}},
  {$group: {
      _id: "$doctor",
      patients: { $addToSet: "$patient" },
      patientCount: { $sum: 1 }
    }},
  {$match: {patientCount: { $gt: 1 }}},
  {$lookup: {
      from: "doctor",
      localField: "_id",
      foreignField: "ssn",
      as: "doctorDetails"
    }},
  {$project: {
      _id: 0,
      doctor: "$doctorDetails",
      patientCount: 1
    }}
])

db.doctor.updateOne(
  { ssn: 'D101' },
  { $set: { yoe: 23 } } )


iii) Retrieve the details of the doctor with the maximum experience.
db.doctor.aggregate([
  {
    $group: {
      _id: null,
      maxExperience: { $max: "$yoe" }
    }
  },
  {
    $unwind: "$maxExperience"
  },
  {
    $lookup: {
      from: "doctor",
      localField: "maxExperience",
      foreignField: "yoe",
      as: "doctorsWithMaxExperience"
    }
  },
  {
    $project: {
      _id: 0,
      doctorsWithMaxExperience: 1
    }
  }
])



iv) List the details of pharmaceutical companies who supply drug to more than 1 pharmacies in the same city where company is located.
db.pcom.aggregate([
   {$unwind:"$drug"},
   {
      $group:{
         _id:{name:"$name",city:"$city"},
         count:{$sum:1}
      }
   },
   {$match:{count:{$gte:2}}},
   {
      $project:{
         _id:0,
         name:"$_id.name",
         city:"$_id.city"
      }
   }
])

v). List the details of healthcare assistants who serve in the operation theatre.
db.assistant.find({
  wards: "op-theatre"
})




vi) List the details of drugs supplied by all pharmaceutical companies.

db.pharm.aggregate([ { $unwind: "$drug" }, { $group: { _id: "$drug.name", pharmacies: { $addToSet: "$name" }, count: { $sum: 1 } } }, { $match: { count: { $gte: db.pharm.find().count() } } }, { $project: { _id: 0, drug: "$_id", pharmacies: 1 } }] )
























db.doctor.find().sort({ yoe: -1 }).limit(1)



db.pcom.aggregate([ 
	{ $unwind: "$drug" },
	{ $lookup: { from: "drug", localField: "drug", foreignField: "name", as: "drugDetails" } }, 
	{ $project: { _id: 0, pcomName: "$name", city: "$city", drug: "$drugDetails" } }
] )



db.pharm.aggregate([ { $unwind: "$drug" }, { $group: { _id: "$drug.name", pharmacies: { $addToSet: "$name" }, count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { _id: 0, drug: "$_id", pharmacies: 1 } }] )
